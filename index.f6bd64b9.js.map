{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,oEAQAC,iBACE,IACE,MAAQC,QAAAC,EAAOC,cAAEA,SAAwB,EAAAC,EAAAC,sBAEtB,IAAIC,EAAAR,GAAJ,CAAeS,EAAAC,UAAW,CAC3CC,WAAYN,EACZO,aAAc,GACdC,aAAc,EACdC,aAAa,IAGJC,GAAG,aAAab,MAAMc,KAC/B,EAAAC,EAAAC,WACA,MAAMC,EAAcH,EAAMI,MACpBjB,QAAEA,SAAkB,EAAAG,EAAAC,oBAAmBY,GACvCE,QAAe,EAAAC,EAAAJ,SAAcf,GACnC,OAAQM,EAAAc,SAASC,UAAYH,CAAM,IAGrC,MAAMI,QAAe,EAAAH,EAAAJ,SAAcd,GAC3BK,EAAAc,SAASC,UAAYC,C,CAC7B,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,Q,EAItBC,GClCA9B,EAAAC,EAAA,S,iEAQeC,eAAA6B,EAAiCC,EAAaC,GAC3D,IACE,MAAQ9B,QAAAC,EAAOC,cAAEA,SAAwB,EAAAC,EAAA4B,qBACvCF,EACAC,GAGF,GAAuB,IAAnB7B,EAAQ+B,OAEV,YADA1B,EAAA2B,QAAQC,MAAMC,QAAU,SAIP,IAAI9B,EAAAR,GAAJ,CAAeS,EAAAC,UAAW,CAC3CC,WAAYN,EACZO,aAAc,GACdC,aAAc,EACdC,aAAa,IAGJC,GAAG,aAAab,MAAMc,KAC/B,EAAAC,EAAAC,WACA,MAAMC,EAAcH,EAAMI,MACpBjB,QAAEA,SAAkB,EAAAG,EAAA4B,qBAAoBF,EAAab,GACrDE,QAAe,EAAAC,EAAAJ,SAAcf,GACnC,OAAQM,EAAAc,SAASC,UAAYH,CAAM,IAGrC,MAAMI,QAAe,EAAAH,EAAAJ,SAAcd,GACnC,OAAQK,EAAAc,SAASC,UAAYC,C,CAC7B,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,Q,iBCnCtBU,aAAaC,iBAAiB,UAE9BtC,eAAgCc,GAC9BA,EAAMyB,iBACN,MAAMC,EAAQjC,EAAAkC,QAAQC,MAGtB,GAA6B,KAAzBnC,EAAAkC,QAAQC,MAAMC,OAEhB,YADApC,EAAA2B,QAAQC,MAAMC,QAAU,SAItB7B,EAAAkC,QAAQC,MAAMC,SAChBpC,EAAA2B,QAAQC,MAAMC,QAAU,QAE1BP,EAAkBW,EAVP,GAWX1B,EAAM8B,cAAcC,O","sources":["src/js/get-popular-movies.js","src/js/get-movie-by-keyword.js","src/js/search-by-keyword.js"],"sourcesContent":["import Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.min.css';\nimport { fetchPopularMovies } from './api';\nimport renderGallery from './render-gallery';\nimport { moviesEl } from './ref-index';\nimport { container } from './ref-index';\nimport setScrollToUp from './set-scroll';\n\nasync function getPopularMovies() {\n  try {\n    const { results, total_results } = await fetchPopularMovies();\n\n    const pagination = new Pagination(container, {\n      totalItems: total_results,\n      itemsPerPage: 20,\n      visiblePages: 5,\n      centerAlign: true,\n    });\n\n    pagination.on('afterMove', async event => {\n      setScrollToUp();\n      const currentPage = event.page;\n      const { results } = await fetchPopularMovies(currentPage);\n      const markup = await renderGallery(results);\n      return (moviesEl.innerHTML = markup);\n    });\n\n    const markup = await renderGallery(results);\n    return (moviesEl.innerHTML = markup);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\ngetPopularMovies();","import Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.min.css';\nimport { container } from './ref-index';\nimport { fetchMovieByKeyword } from './api';\nimport renderGallery from './render-gallery';\nimport { moviesEl, errorEl } from './ref-index';\nimport setScrollToUp from './set-scroll';\n\nexport default async function getMovieByKeyword(searchQuery, pageNumber) {\n  try {\n    const { results, total_results } = await fetchMovieByKeyword(\n      searchQuery,\n      pageNumber\n    );\n\n    if (results.length === 0) {\n      errorEl.style.display = 'block';\n      return;\n    }\n\n    const pagination = new Pagination(container, {\n      totalItems: total_results,\n      itemsPerPage: 20,\n      visiblePages: 5,\n      centerAlign: true,\n    });\n\n    pagination.on('afterMove', async event => {\n      setScrollToUp();\n      const currentPage = event.page;\n      const { results } = await fetchMovieByKeyword(searchQuery, currentPage);\n      const markup = await renderGallery(results);\n      return (moviesEl.innerHTML = markup);\n    });\n\n    const markup = await renderGallery(results);\n    return (moviesEl.innerHTML = markup);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import getMovieByKeyword from './get-movie-by-keyword';\nimport { searchFormEl, inputEl, errorEl } from './ref-index';\n\nsearchFormEl.addEventListener('submit', handleFormSubmit);\n\nasync function handleFormSubmit(event) {\n  event.preventDefault();\n  const query = inputEl.value;\n  let page = 1;\n\n  if (inputEl.value.trim() === '') {\n    errorEl.style.display = 'block';\n    return;\n  }\n\n  if (inputEl.value.trim()) {\n    errorEl.style.display = 'none';\n  }\n  getMovieByKeyword(query, page);\n  event.currentTarget.reset();\n}\n"],"names":["$fb9GJ","parcelRequire","async","results","results1","total_results","$7rYDH","fetchPopularMovies","$parcel$interopDefault","$c41S2","container","totalItems","itemsPerPage","visiblePages","centerAlign","on","event","$7TcIZ","default","currentPage","page","markup","$34HY9","moviesEl","innerHTML","markup1","error","console","log","message","$bb5bd23d99e8a26a$var$getPopularMovies","$6d410a0f2cb6b6b1$export$2e2bcd8739ae039","searchQuery","pageNumber","fetchMovieByKeyword","length","errorEl","style","display","searchFormEl","addEventListener","preventDefault","query","inputEl","value","trim","currentTarget","reset"],"version":3,"file":"index.f6bd64b9.js.map"}