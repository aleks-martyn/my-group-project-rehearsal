{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,GCAAD,EAAAC,EAAA,S,gEAOeC,eAAAC,EAA+BC,EAASC,EAAUC,GAC/DF,EAAQG,UAAUC,OAAO,oBACzBH,EAASE,UAAUE,IAAI,oBAEvB,MAAMC,GAAe,EAAAC,EAAAC,MAAKN,IAAQ,GAC5BO,EAAgBH,EAAaI,OAKnC,GAAID,EAAgB,EAAG,CACrB,MAAME,GAAgB,EAAAC,EAAAC,SAAqBP,EALvB,GAOdQ,GAAa,EAAAC,EAAAF,SACjBJ,EARkB,EAED,GAWnB,IACEK,EAAWE,GAAG,aAAalB,MAAMmB,KAC/B,EAAAC,EAAAL,WACA,MAAMM,EAAcF,EAAMG,KACpBC,GAAgB,EAAAT,EAAAC,SACpBP,EAlBc,EAoBda,GAGIG,QAAe,EAAAC,EAAAV,SAAcQ,GACnC,OAAQzB,EAAA4B,SAASC,UAAYH,CAAM,IAGrC,MAAMI,QAAe,EAAAH,EAAAV,SAAcF,GACnC,OAAQf,EAAA4B,SAASC,UAAYC,C,CAC7B,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,Q,sFDlCxBhC,iBACEF,EAAAmC,iBAAiB5B,UAAUE,IAAI,oBAE/BT,EAAAoC,mBAAmBC,iBAAiB,SAAS,IAC3ClC,EAAgBH,EAAAmC,iBAAkBnC,EAAAoC,mBAAoBE,EAAAC,kBAExDvC,EAAAmC,iBAAiBE,iBAAiB,SAAS,IACzClC,EAAgBH,EAAAoC,mBAAoBpC,EAAAmC,iBAAkBG,EAAAE,gBAGxD,MAAM9B,GAAe,EAAAC,EAAAC,MAAK0B,EAAAE,eAAiB,GACrC3B,EAAgBH,EAAaI,OAKnC,GAAID,EAAgB,EAAG,CACrB,MAAME,GAAgB,EAAAC,EAAAC,SAAqBP,EALvB,GAOdQ,GAAa,EAAAC,EAAAF,SACjBJ,EARkB,EAED,GAWnB,IACEK,EAAWE,GAAG,aAAalB,MAAMmB,KAC/B,EAAAC,EAAAL,WACA,MAAMM,EAAcF,EAAMG,KACpBC,GAAgB,EAAAT,EAAAC,SACpBP,EAlBc,EAoBda,GAGIG,QAAe,EAAAC,EAAAV,SAAcQ,GACnC,OAAQzB,EAAA4B,SAASC,UAAYH,CAAM,IAGrC,MAAMI,QAAe,EAAAH,EAAAV,SAAcF,GAC3Bf,EAAA4B,SAASC,UAAYC,C,CAC7B,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,Q,GAKxBO,G","sources":["src/js/get-stored-movies.js","src/js/get-selected-list.js"],"sourcesContent":["import { moviesEl, headerWatchedBtnEl, headerQueueBtnEl } from './ref-index';\nimport getSelectedList from './get-selected-list';\nimport renderGallery from './render-gallery';\nimport { load } from './local-storage-functions';\nimport { WATCHED_MOVIES, QUEUE_MOVIES } from './constants';\nimport createPagination from './create-pagination';\nimport getCurrentPageMovies from './get-current-page-movies';\nimport setScrollToUp from './set-scroll';\n\nasync function getStoredMovies() {\n  headerQueueBtnEl.classList.add('lib-btn--current');\n\n  headerWatchedBtnEl.addEventListener('click', () =>\n    getSelectedList(headerQueueBtnEl, headerWatchedBtnEl, WATCHED_MOVIES)\n  );\n  headerQueueBtnEl.addEventListener('click', () =>\n    getSelectedList(headerWatchedBtnEl, headerQueueBtnEl, QUEUE_MOVIES)\n  );\n\n  const storedMovies = load(QUEUE_MOVIES) ?? [];\n  const movieQuantity = storedMovies.length;\n  const moviesPerPage = 4;\n\n  const visiblePages = 3;\n\n  if (movieQuantity > 0) {\n    const visibleMovies = getCurrentPageMovies(storedMovies, moviesPerPage);\n\n    const pagination = createPagination(\n      movieQuantity,\n      moviesPerPage,\n      visiblePages\n    );\n\n    try {\n      pagination.on('afterMove', async event => {\n        setScrollToUp();\n        const currentPage = event.page;\n        const visibleMovies = getCurrentPageMovies(\n          storedMovies,\n          moviesPerPage,\n          currentPage\n        );\n\n        const markup = await renderGallery(visibleMovies);\n        return (moviesEl.innerHTML = markup);\n      });\n\n      const markup = await renderGallery(visibleMovies);\n      return (moviesEl.innerHTML = markup);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n\ngetStoredMovies();\n","import { moviesEl } from './ref-index';\nimport { load } from './local-storage-functions';\nimport renderGallery from './render-gallery';\nimport createPagination from './create-pagination';\nimport getCurrentPageMovies from './get-current-page-movies';\nimport setScrollToUp from './set-scroll';\n\nexport default async function getSelectedList(firstEl, secondEl, key) {\n  firstEl.classList.remove('lib-btn--current');\n  secondEl.classList.add('lib-btn--current');\n\n  const storedMovies = load(key) ?? [];\n  const movieQuantity = storedMovies.length;\n  const moviesPerPage = 4;\n\n  const visiblePages = 3;\n\n  if (movieQuantity > 0) {\n    const visibleMovies = getCurrentPageMovies(storedMovies, moviesPerPage);\n\n    const pagination = createPagination(\n      movieQuantity,\n      moviesPerPage,\n      visiblePages\n    );\n\n    try {\n      pagination.on('afterMove', async event => {\n        setScrollToUp();\n        const currentPage = event.page;\n        const visibleMovies = getCurrentPageMovies(\n          storedMovies,\n          moviesPerPage,\n          currentPage\n        );\n\n        const markup = await renderGallery(visibleMovies);\n        return (moviesEl.innerHTML = markup);\n      });\n\n      const markup = await renderGallery(visibleMovies);\n      return (moviesEl.innerHTML = markup);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n"],"names":["$c41S2","parcelRequire","async","$bd34df675b968fad$export$2e2bcd8739ae039","firstEl","secondEl","key","classList","remove","add","storedMovies","$bAF63","load","movieQuantity","length","visibleMovies1","$jI9ul","default","pagination","$dOiwp","on","event","$7TcIZ","currentPage","page","visibleMovies","markup","$34HY9","moviesEl","innerHTML","markup1","error","console","log","message","headerQueueBtnEl","headerWatchedBtnEl","addEventListener","$8G1wF","WATCHED_MOVIES","QUEUE_MOVIES","$ae78682bcf9dfc56$var$getStoredMovies"],"version":3,"file":"library.94643261.js.map"}