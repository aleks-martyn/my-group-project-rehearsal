{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,6BCAAD,EAAAC,EAAA,S,qGAO8CC,EAASC,EAAUC,G,OAAnCC,EAAeC,MAAAC,KAAAC,U,UAAfH,I,OAAAA,EAAfI,EAAAT,EAAA,CAAAS,EAAAC,GAAAC,MAAA,SAAAC,EAA+BV,EAASC,EAAUC,G,IAI1CS,EAAfC,EACAC,EAMEC,EAEAC,EAoBEC,E,qEAhCVhB,EAAQiB,UAAUC,OAAO,oBACzBjB,EAASgB,UAAUE,IAAI,oBAEjBP,EAAwB,QAATD,GAAA,EAAAS,EAAAC,MAAKnB,UAAI,IAATS,IAAa,GAC5BE,EAAgBD,EAAaU,OACb,EAED,IAEjBT,EAAgB,GAAC,C,uBACbC,GAAgB,EAAAS,EAAAC,SAAqBZ,EALvB,GAOdG,GAAa,EAAAU,EAAAD,SACjBX,EARkB,EAED,G,UAYjBE,EAAWW,GAAG,YAAW,W,MAAEnB,EAAAT,EAAA,CAAAS,EAAAC,GAAAC,MAAA,SAAAkB,EAAMC,G,IAEzBC,EACAC,EAMAC,E,yEARN,EAAAC,EAAAR,WACMK,EAAcD,EAAMK,KACpBH,GAAgB,EAAAP,EAAAC,SACpBZ,EAlBc,EAoBdiB,G,UAGmB,EAAAK,EAAAV,SAAcM,G,cAA7BC,EAAMI,EAAAC,K,kBACJC,EAAAC,SAASC,UAAYR,G,2DAVEH,G,gCAAR,I,WAaJ,EAAAM,EAAAV,SAAcV,G,eAA7BE,EAAMwB,EAAAJ,K,kBACJC,EAAAC,SAASC,UAAYvB,G,mCAE7ByB,QAAQC,IAAIF,EAAAG,GAAMC,S,2DApCMzC,EAAeC,MAAAC,KAAAC,U,4FDE9BuC,I,OAAAA,EAAftC,EAAAT,EAAA,CAAAS,EAAAC,GAAAC,MAAA,SAAAC,I,IAUuBC,EAAfC,EACAC,EAMEC,EAEAC,EAoBEC,E,qEAtCVqB,EAAAS,iBAAiB7B,UAAUE,IAAI,oBAE/BkB,EAAAU,mBAAmBC,iBAAiB,SAAS,W,OAC3CC,EAAgBZ,EAAAS,iBAAkBT,EAAAU,mBAAoBG,EAAAC,e,IAExDd,EAAAS,iBAAiBE,iBAAiB,SAAS,W,OACzCC,EAAgBZ,EAAAU,mBAAoBV,EAAAS,iBAAkBI,EAAAE,a,IAGlDxC,EAAiC,QAAlBD,GAAA,EAAAS,EAAAC,MAAK6B,EAAAE,qBAAa,IAAlBzC,IAAsB,GACrCE,EAAgBD,EAAaU,OACb,EAED,IAEjBT,EAAgB,GAAC,C,uBACbC,GAAgB,EAAAS,EAAAC,SAAqBZ,EALvB,GAOdG,GAAa,EAAAU,EAAAD,SACjBX,EARkB,EAED,G,UAYjBE,EAAWW,GAAG,YAAW,W,MAAEnB,EAAAT,EAAA,CAAAS,EAAAC,GAAAC,MAAA,SAAAkB,EAAMC,G,IAEzBC,EACAC,EAMAC,E,yEARN,EAAAC,EAAAR,WACMK,EAAcD,EAAMK,KACpBH,GAAgB,EAAAP,EAAAC,SACpBZ,EAlBc,EAoBdiB,G,UAGmB,EAAAK,EAAAV,SAAcM,G,cAA7BC,EAAMI,EAAAC,K,kBACJC,EAAAC,SAASC,UAAYR,G,2DAVEH,G,gCAAR,I,WAaJ,EAAAM,EAAAV,SAAcV,G,eAA7BE,EAAMwB,EAAAJ,K,kBACJC,EAAAC,SAASC,UAAYvB,G,mCAE7ByB,QAAQC,IAAIF,EAAAG,GAAMC,S,2DA1CTC,EAAezC,MAAAC,KAAAC,U,aAAfuC,EAAezC,MAAAC,KAAAC,U,CA+C9B+C,G","sources":["src/js/get-stored-movies.js","src/js/get-selected-list.js"],"sourcesContent":["import { moviesEl, headerWatchedBtnEl, headerQueueBtnEl } from './ref-index';\nimport getSelectedList from './get-selected-list';\nimport renderGallery from './render-gallery';\nimport { load } from './local-storage-functions';\nimport { WATCHED_MOVIES, QUEUE_MOVIES } from './constants';\nimport createPagination from './create-pagination';\nimport getCurrentPageMovies from './get-current-page-movies';\nimport setScrollToUp from './set-scroll';\n\nasync function getStoredMovies() {\n  headerQueueBtnEl.classList.add('lib-btn--current');\n\n  headerWatchedBtnEl.addEventListener('click', () =>\n    getSelectedList(headerQueueBtnEl, headerWatchedBtnEl, WATCHED_MOVIES)\n  );\n  headerQueueBtnEl.addEventListener('click', () =>\n    getSelectedList(headerWatchedBtnEl, headerQueueBtnEl, QUEUE_MOVIES)\n  );\n\n  const storedMovies = load(QUEUE_MOVIES) ?? [];\n  const movieQuantity = storedMovies.length;\n  const moviesPerPage = 4;\n\n  const visiblePages = 3;\n\n  if (movieQuantity > 0) {\n    const visibleMovies = getCurrentPageMovies(storedMovies, moviesPerPage);\n\n    const pagination = createPagination(\n      movieQuantity,\n      moviesPerPage,\n      visiblePages\n    );\n\n    try {\n      pagination.on('afterMove', async event => {\n        setScrollToUp();\n        const currentPage = event.page;\n        const visibleMovies = getCurrentPageMovies(\n          storedMovies,\n          moviesPerPage,\n          currentPage\n        );\n\n        const markup = await renderGallery(visibleMovies);\n        return (moviesEl.innerHTML = markup);\n      });\n\n      const markup = await renderGallery(visibleMovies);\n      return (moviesEl.innerHTML = markup);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n\ngetStoredMovies();\n","import { moviesEl } from './ref-index';\nimport { load } from './local-storage-functions';\nimport renderGallery from './render-gallery';\nimport createPagination from './create-pagination';\nimport getCurrentPageMovies from './get-current-page-movies';\nimport setScrollToUp from './set-scroll';\n\nexport default async function getSelectedList(firstEl, secondEl, key) {\n  firstEl.classList.remove('lib-btn--current');\n  secondEl.classList.add('lib-btn--current');\n\n  const storedMovies = load(key) ?? [];\n  const movieQuantity = storedMovies.length;\n  const moviesPerPage = 4;\n\n  const visiblePages = 3;\n\n  if (movieQuantity > 0) {\n    const visibleMovies = getCurrentPageMovies(storedMovies, moviesPerPage);\n\n    const pagination = createPagination(\n      movieQuantity,\n      moviesPerPage,\n      visiblePages\n    );\n\n    try {\n      pagination.on('afterMove', async event => {\n        setScrollToUp();\n        const currentPage = event.page;\n        const visibleMovies = getCurrentPageMovies(\n          storedMovies,\n          moviesPerPage,\n          currentPage\n        );\n\n        const markup = await renderGallery(visibleMovies);\n        return (moviesEl.innerHTML = markup);\n      });\n\n      const markup = await renderGallery(visibleMovies);\n      return (moviesEl.innerHTML = markup);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n"],"names":["$bpxeT","parcelRequire","firstEl","secondEl","key","$18130cca87c6a84d$var$_getSelectedList","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee1","ref","storedMovies","movieQuantity","visibleMovies1","pagination","markup1","classList","remove","add","$lFpdU","load","length","$3ONdo","default","$bqXhx","on","_callee","event","currentPage","visibleMovies","markup","$4acOt","page","$faNkY","_ctx","sent","$jsmte","moviesEl","innerHTML","_ctx1","console","log","t0","message","$b7ea3a4d46bef10f$var$_getStoredMovies","headerQueueBtnEl","headerWatchedBtnEl","addEventListener","$18130cca87c6a84d$export$2e2bcd8739ae039","$4s6iC","WATCHED_MOVIES","QUEUE_MOVIES","$b7ea3a4d46bef10f$var$getStoredMovies"],"version":3,"file":"library.1f6b0f3f.js.map"}